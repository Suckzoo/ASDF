////////////////////////////////////////////////////////////////////////////////////////////////////
// [CS482] Interactive Computer Graphics
// Here, we brought offset mapping material source from Ogre sample material. (OffsetMapping.material)
// Bump mapping sample source is not fully operational (does not provide room for diffuse texture map), 
// so we use offset mapping instead. (this is more advanced technique anyhow.. kk)
// For general offset-mapped(bump-mapped) specular material, extends from ICG/OffsetMapping/Specular

// Bump map with Parallax offset vertex program, support for this is required 
vertex_program ICG/OffsetMappingVPCg cg 
{ 
   source OffsetMapping.cg 
   entry_point main_vp 
   profiles vs_1_1 arbvp1 
} 

// Bump map with parallax fragment program 
fragment_program ICG/OffsetMappingFPCg cg
{ 
   source OffsetMapping.cg
   entry_point main_fp
   profiles ps_2_0 arbfp1
} 

// Bump map with Parallax offset vertex program, support for this is required 
vertex_program ICG/OffsetMappingVPShaderModel4 cg 
{ 
   source OffsetMapping.cg 
   entry_point main_vp 
   profiles vs_4_0 
} 

// Bump map with parallax fragment program 
fragment_program ICG/OffsetMappingFPShaderModel4 cg
{ 
   source OffsetMapping.cg
   entry_point main_fp
   profiles ps_4_0
} 


// Bump map with parallax fragment program 
fragment_program ICG/OffsetMappingPSAsm asm 
{ 
   source OffsetMapping_specular.asm 
   // sorry, only for ps_1_4 and above:) 
   syntax ps_1_4 
	default_params
	{
        // Parallax Height scale and bias 
        param_indexed 2 float4 0.04 -0.02 1 0 
	}
} 

// Bump map with parallax fragment program 
fragment_program ICG/OffsetMappingPSGLSLES glsles
{ 
    source OffsetMapping_specular.glsles
    profiles glsles
	default_params
	{
        // Parallax Height scale and bias 
        param_named scaleBias float4 0.04 -0.02 1 0 
	}
}

// Bump map with Parallax offset vertex program, support for this is required 
vertex_program ICG/OffsetMappingVPGLSLES glsles
{ 
    source OffsetMappingVp.glsles
    profiles glsles
} 

// Bump map with parallax fragment program 
fragment_program ICG/OffsetMappingFPGLSLES glsles
{ 
    source OffsetMappingFp.glsles
    profiles glsles
	default_params
	{
		// assign samplers as required by GLSL
		param_named normalHeightMap int 0
		param_named diffuseMap int 1
	}
} 

vertex_program ICG/OffsetMappingVP unified
{
	delegate ICG/OffsetMappingVPGLSLES
	delegate ICG/OffsetMappingVPCg
}

fragment_program ICG/OffsetMappingFP unified
{
	delegate ICG/OffsetMappingFPGLSLES
	delegate ICG/OffsetMappingFPCg
}

fragment_program ICG/OffsetMappingPS unified
{
	delegate ICG/OffsetMappingPSGLSLES
	delegate ICG/OffsetMappingPSAsm
}


material ICG/OffsetMapping/Specular
{ 
   technique ShaderModel4
   {
   	// ambient / depth
	  pass
	  {
	      illumination_stage ambient
		  // I have not much idea what is this yet.. just removing it to enable basic color specifying interface
		  //vertex_program_ref Ogre/BasicVertexPrograms/AmbientOneTextureCgSm4
		  //{
            //  param_named_auto worldViewProj worldviewproj_matrix
		  //}
		  //fragment_program_ref Ogre/BasicFragmentPrograms/PassthroughFpCgSm4ForAmbientOneTexture
		  //{
		  //}
		  
	  }

      // do the lighting and bump mapping with parallax pass 
      pass 
      {
	      illumination_stage per_light
	      scene_blend add
		  depth_write off
		  iteration once_per_light
       
         // Vertex program reference 
         vertex_program_ref ICG/OffsetMappingVPShaderModel4
         { 
            param_named_auto lightPosition light_position_object_space 0 
            param_named_auto eyePosition camera_position_object_space 
            param_named_auto worldViewProj worldviewproj_matrix 
         } 

         // Fragment program 
         fragment_program_ref ICG/OffsetMappingFPShaderModel4
         { 
            param_named_auto lightDiffuse light_diffuse_colour 0 
            param_named_auto lightSpecular light_specular_colour 0 
            // Parallax Height scale and bias 
            param_named scaleBias float4 0.04 -0.02 1 0 
         } 
          
         // Normal + height(alpha) map 
         texture_unit 
         { 
            texture rockwall_NH.tga
            tex_coord_set 0 
         } 

         // Base diffuse texture map 
         texture_unit 
         { 
            texture rockwall.tga
            tex_coord_set 1 
         } 
      } 
   } 

   technique GLES
   {
   	  // ambient / depth
	  pass
	  {
	      illumination_stage ambient
		  // I have not much idea what is this yet.. just removing it to enable basic color specifying interface
		  //vertex_program_ref Ogre/BasicVertexPrograms/AmbientOneTextureUnified
		  //{
		  //}
		  //fragment_program_ref Ogre/BasicFragmentPrograms/PassthroughFP
		  //{
		  //}
		  
	  }
      // do the lighting and bump mapping with parallax pass 
      pass 
      {
	     illumination_stage per_light
	     scene_blend add
		 depth_write off
		 iteration once_per_light
       
         // Vertex program reference 
         vertex_program_ref ICG/OffsetMappingVP 
         { 
            param_named_auto lightPosition light_position_object_space 0 
            param_named_auto eyePosition camera_position_object_space 
            param_named_auto worldViewProj worldviewproj_matrix 
         } 

         // Fragment program 
         fragment_program_ref ICG/OffsetMappingFP
         { 
            param_named_auto lightDiffuse light_diffuse_colour 0 
            param_named_auto lightSpecular light_specular_colour 0 
            // Parallax Height scale and bias 
            param_named scaleBias float4 0.04 -0.02 1 0 
         } 
          
         // Normal + height(alpha) map 
         texture_unit 
         { 
            texture rockwall_NH.tga
            tex_coord_set 0 
         } 

         // Base diffuse texture map 
         texture_unit 
         { 
            texture rockwall.tga
            tex_coord_set 1 
         } 
      } 
   } 

   technique gl dx9
   {
   	  // ambient / depth
	  pass
	  {
	      illumination_stage ambient
		  //vertex_program_ref Ogre/BasicVertexPrograms/AmbientOneTextureUnified
		  //{
		  //}
		  
	  }
      // do the lighting and bump mapping with parallax pass 
      pass 
      {
	     illumination_stage per_light
	     scene_blend add
		 depth_write off
		 iteration once_per_light
       
         // Vertex program reference 
         vertex_program_ref ICG/OffsetMappingVP 
         { 
            param_named_auto lightPosition light_position_object_space 0 
            param_named_auto eyePosition camera_position_object_space 
            param_named_auto worldViewProj worldviewproj_matrix 
         } 

         // Fragment program 
         fragment_program_ref ICG/OffsetMappingFP
         { 
            param_named_auto lightDiffuse light_diffuse_colour 0 
            param_named_auto lightSpecular light_specular_colour 0 
            // Parallax Height scale and bias 
            param_named scaleBias float4 0.04 -0.02 1 0 
         } 
          
         // Normal + height(alpha) map 
         texture_unit 
         { 
            texture rockwall_NH.tga
            tex_coord_set 0 
         } 

         // Base diffuse texture map 
         texture_unit 
         { 
            texture rockwall.tga
            tex_coord_set 1 
         } 
      } 
   } 

   // This is the preferred technique which uses both vertex and 
   // fragment programs, supports coloured lights 
   technique 
   { 
      // do the lighting and bump mapping with parallax pass 
      pass 
      { 
       
		 iteration once_per_light
         
		 // Vertex program reference 
         vertex_program_ref ICG/OffsetMappingVP 
         { 
            param_named_auto lightPosition light_position_object_space 0 
            param_named_auto eyePosition camera_position_object_space 
            param_named_auto worldViewProj worldviewproj_matrix 
         } 

         // Fragment program 
         fragment_program_ref ICG/OffsetMappingPS 
         { 
            param_indexed_auto 0 light_diffuse_colour 0 
            param_indexed_auto 1 light_specular_colour 0 
            // Parallax Height scale and bias 
//            param_indexed 2 float4 0.04 -0.02 1 0 
         } 
          
         // Normal + height(alpha) map 
         texture_unit 
         { 
            texture rockwall_NH.tga
			tex_coord_set 0 
         } 

         // Base diffuse texture map 
         texture_unit 
         { 
            texture rockwall.tga
            tex_coord_set 1 
         } 
      } 
   } 
   
   // Simple no-shader fallback
   technique 
   { 
      pass 
      { 
         // Base diffuse texture map 
         texture_unit 
         { 
            texture rockwall.tga
         } 
	  }
   }

}



// Single-pass offset mapping with shadows
vertex_program ICG/OffsetMappingIntegratedShadowsVPhlsl hlsl 
{ 
   source OffsetMapping.hlsl
   entry_point integratedshadows_vp 
   target vs_2_0
} 
vertex_program ICG/OffsetMappingIntegratedShadowsVPglsl glsl 
{ 
   source OffsetMappingVp.glsl
} 

vertex_program ICG/OffsetMappingIntegratedShadowsVPglsles glsles
{ 
   source OffsetMappingShadowsVp.glsles
} 

// Single-pass offset mapping with shadows
fragment_program ICG/OffsetMappingIntegratedShadowsFPhlsl hlsl
{ 
   source OffsetMapping.hlsl
   entry_point integratedshadows_fp
   target ps_2_0
} 
fragment_program ICG/OffsetMappingIntegratedShadowsFPglsl glsl
{
	source OffsetMappingFp.glsl
	default_params
	{
		// assign samplers as required by GLSL
		param_named normalHeightMap int 0
		param_named diffuseMap int 1
		param_named shadowMap1 int 2
		param_named shadowMap2 int 3
	}
}
fragment_program ICG/OffsetMappingIntegratedShadowsFPglsles glsles
{
	source OffsetMappingShadowsFp.glsles
	default_params
	{
		// assign samplers as required by GLSL ES
		param_named normalHeightMap int 0
		param_named diffuseMap int 1
		param_named shadowMap1 int 2
		param_named shadowMap2 int 3
	}
}
// Single-pass offset mapping with shadows
vertex_program ICG/OffsetMappingIntegratedShadowsVP unified
{
	delegate ICG/OffsetMappingIntegratedShadowsVPhlsl
	delegate ICG/OffsetMappingIntegratedShadowsVPglsl
	delegate ICG/OffsetMappingIntegratedShadowsVPglsles
}
// Single-pass offset mapping with shadows
fragment_program ICG/OffsetMappingIntegratedShadowsFP unified
{
	delegate ICG/OffsetMappingIntegratedShadowsFPhlsl
	delegate ICG/OffsetMappingIntegratedShadowsFPglsl
	delegate ICG/OffsetMappingIntegratedShadowsFPglsles
}



material ICG/OffsetMapping/IntegratedShadows 
{ 

   technique 
   { 
      // do the lighting  and bump mapping with parallax pass 
      pass 
      { 
       
         // Vertex program reference 
         vertex_program_ref ICG/OffsetMappingIntegratedShadowsVP
         { 
            param_named_auto lightPosition light_position_object_space 0
            param_named_auto eyePosition camera_position_object_space 
            param_named_auto worldViewProj worldviewproj_matrix 
			param_named_auto spotDirection light_direction_object_space 0

            param_named_auto lightPosition1 light_position_object_space 1
			param_named_auto spotDirection1 light_direction_object_space 1
			// shadow texture projections
			param_named_auto worldMatrix world_matrix
			param_named_auto texViewProj1 texture_viewproj_matrix 0
			param_named_auto texViewProj2 texture_viewproj_matrix 1
         } 

         // Fragment program 
         fragment_program_ref ICG/OffsetMappingIntegratedShadowsFP
         { 
            param_named_auto lightDiffuse light_diffuse_colour 0 
			param_named_auto spotParams spotlight_params 0

			param_named_auto lightDiffuse1 light_diffuse_colour 1
			param_named_auto spotParams1 spotlight_params 1
            // Parallax Height scale and bias 
            param_named scaleBias float4 0.04 -0.02 1 0 
         } 
          
         // Normal + height(alpha) map 
         texture_unit 
         { 
            texture rockwall_NH.tga
            tex_coord_set 0 
         } 

         // Base diffuse texture map 
         texture_unit 
         { 
            texture rockwall.tga
            tex_coord_set 1 
         } 

		 // shadowmap 1
		 texture_unit
		 {
		 	content_type shadow
		 }
		 // shadowmap 2
		 texture_unit
		 {
		 	content_type shadow
		 }
      } 
   }
}


////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////

material _GAF_Cou
{
	technique
	{
		pass
		{
			ambient 0.67 0.4 0.25 1
			diffuse 0.67 0.4 0.25 1
			specular 0 0 0 1 50

			cull_hardware none

			texture_unit
			{
				texture _GAF_C01.jpg
			}
		}
	}
}

//----------------------------------------------------------------------
// For house roof
material _GAF_Cou_OffsetMapping : ICG/OffsetMapping/Specular
{
	technique ShaderModel4
	{
		pass
		{
			ambient 0.345098 0.188235 0.12549 1
			diffuse 0.345098 0.188235 0.12549 1
			specular 0 0 0 1 50
			cull_hardware none
		}
		pass 
		{
			// Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture _GAF_C01_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture _GAF_C01.jpg
            		tex_coord_set 1 
         	}
		}
	}

	technique GLES
	{
		pass
		{
			ambient 0.345098 0.188235 0.12549 1
			diffuse 0.345098 0.188235 0.12549 1
			specular 0 0 0 1 50
			cull_hardware none
		}
		pass 
		{
			// Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture _GAF_C01_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture _GAF_C01.jpg
            		tex_coord_set 1 
         	}
		}
	}

	technique gl dx9
	{
		pass
		{
			ambient 0.345098 0.188235 0.12549 1
			diffuse 0.345098 0.188235 0.12549 1
			specular 0 0 0 1 50

			cull_hardware none
		}
		pass 
		{
			// Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture _GAF_C01_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture _GAF_C01.jpg
            		tex_coord_set 1 
         	}
		}
	}

	technique
	{
		pass 
		{
			// Working?
			ambient 0.345098 0.188235 0.12549 1
			diffuse 0.345098 0.188235 0.12549 1
			specular 0 0 0 1 50

			cull_hardware none

			// Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture _GAF_C01_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture _GAF_C01.jpg
            		tex_coord_set 1 
         	}
		}
	}
	
	technique 
	{ 
		pass 
		{
			texture_unit 
			{ 
				texture _GAF_C01.jpg
			} 
		}
	}
}
//----------------------------------------------------------------------

material _OliveDr
{
	technique
	{
		pass
		{
			ambient 0.419608 0.556863 0.137255 1
			diffuse 0.419608 0.556863 0.137255 1
			specular 0 0 0 1 50

			cull_hardware none
		}
	}
}

material _Redwood
{
	technique
	{
		pass
		{
			ambient 0.654902 0.396078 0.321569 1
			diffuse 0.654902 0.396078 0.321569 1
			specular 0 0 0 1 50
			
			cull_hardware none
		}
	}
}

material _Vinyl_G
{
	technique
	{
		pass
		{
			ambient 0.87 0.8 0.75 1
			diffuse 0.87 0.8 0.75 1
			specular 0 0 0 1 50

			cull_hardware none

			texture_unit
			{
				texture Stone_Sa.jpg
			}
		}

	}

}

//----------------------------------------------------------------------
// For house wall
material _Vinyl_G_OffsetMapping : ICG/OffsetMapping/Specular
{
	technique ShaderModel4
	{
		pass
		{
			ambient 0.647059 0.584314 0.533333 1 
			diffuse 0.647059 0.584314 0.533333 1
			specular 0 0 0 1 50
			cull_hardware none
		}
		pass
		{ 
			// Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture Stone_Sa_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture Stone_Sa.jpg
            		tex_coord_set 1 
         	}
		}
	}

	technique GLES
	{
		pass
		{
			ambient 0.647059 0.584314 0.533333 1 
			diffuse 0.647059 0.584314 0.533333 1
			specular 0 0 0 1 50
			cull_hardware none
		}
		pass
		{
			// Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture Stone_Sa_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture Stone_Sa.jpg
            		tex_coord_set 1 
         	} 

		}
	}

	technique gl dx9
	{
		pass
		{
			ambient 0.647059 0.584314 0.533333 1 
			diffuse 0.647059 0.584314 0.533333 1
			specular 0 0 0 1 50

			cull_hardware none
		}
		pass
		{ 
			// Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture Stone_Sa_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture Stone_Sa.jpg
            		tex_coord_set 1 
         	} 

		}
	}

	technique
	{
		pass
		{
			// Working?
			ambient 0.647059 0.584314 0.533333 1 
			diffuse 0.647059 0.584314 0.533333 1
			specular 0 0 0 1 50

			cull_hardware none
		        
			// Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture Stone_Sa_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture Stone_Sa.jpg
            		tex_coord_set 1 
         	} 
		}
	}

	technique 
	{ 
		pass 
		{
			texture_unit 
			{ 
				texture Stone_Sa.jpg
			} 
		}
	}
}
//----------------------------------------------------------------------

material Color_D0
{
	technique
	{
		pass
		{
			ambient 1 0.74902 0 1
			diffuse 1 0.74902 0 1
			specular 0 0 0 1 50
			
			cull_hardware none
		}

	}

}

material Default
{
	technique
	{
		pass
		{
			ambient 0.7 0.7 0.7 1
			diffuse 0.7 0.7 0.7 1
			specular 0.707 0.707 0.707 1 50

			cull_hardware none
		}

	}

}

material Nuovo123
{
	technique
	{
		pass
		{
			ambient 0.1 0.2 0.5 1
			diffuse 0.1 0.2 0.5 1
			specular 0.2 0.2 0.2 1 58
			scene_blend add

			// Don't forget to add this to translucent material
			depth_write off 

			//cull_hardware none
			
			texture_unit
			{
				texture P1020820.JPG
				tex_address_mode mirror
				colour_op_ex add src_texture src_current
				colour_op_multipass_fallback one one
				env_map cubic_reflection
			}

			texture_unit
			{
				colour_op_ex blend_manual src_manual src_current 0.5 1 1 1
				colour_op_multipass_fallback dest_colour zero
				alpha_op_ex source1 src_manual src_current 0.4
			}
		}

	}

}

material scocca
{
	technique
	{
		pass
		{
			ambient 0.192157 0.2 0.235294 1
			diffuse 0.192157 0.2 0.235294 1
			specular 0.39 0.39 0.39 1 58

			cull_hardware none
		}

	}

}

material FrontCol
{
	technique
	{
		pass
		{
			specular 0 0 0 1 50

			cull_hardware none
		}

	}

}

material grass001
{
	technique
	{
		pass
		{
			ambient 0.266667 0.337255 0.235294 1
			diffuse 0.266667 0.337255 0.235294 1
			specular 0 0 0 1 50

			//cull_hardware none
		}

	}

}

material Nuovo12
{
	technique
	{
		pass
		{
			ambient 0.509804 0.509804 0.509804 1
			diffuse 0.509804 0.509804 0.509804 1
			specular 0.2 0.2 0.2 1 58

			//cull_hardware none

			texture_unit
			{
				texture _Ashlar_.jpg
			}
		}

	}
}

//----------------------------------------------------------------------
// For front yard
material Nuovo12_OffsetMapping : ICG/OffsetMapping/Specular
{
	technique ShaderModel4
	{
		pass
		{
			ambient 0.309804 0.309804 0.309804 1
			diffuse 0.309804 0.309804 0.309804 1
			specular 0.2 0.2 0.2 1 58
			//cull_hardware none
		}
		pass
		{
		    // Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture _Ashlar_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture _Ashlar_.jpg
            		tex_coord_set 1 
         	} 
		}
	}

	technique GLES
	{
		pass
		{
			ambient 0.309804 0.309804 0.309804 1
			diffuse 0.309804 0.309804 0.309804 1
			specular 0.2 0.2 0.2 1 58
			//cull_hardware none
		}
		pass
		{
		    // Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture _Ashlar_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture _Ashlar_.jpg
            		tex_coord_set 1 
         	}
		}
	}


	technique gl dx9
	{
		pass
		{
			ambient 0.309804 0.309804 0.309804 1
			diffuse 0.309804 0.309804 0.309804 1
			specular 0.2 0.2 0.2 1 58

			//cull_hardware none
		}
		pass
		{
		    // Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture _Ashlar_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture _Ashlar_.jpg
            		tex_coord_set 1 
         	} 
		}

	}

	technique
	{
		pass
		{
			// Working?
			ambient 0.309804 0.309804 0.309804 1
			diffuse 0.309804 0.309804 0.309804 1
			specular 0.2 0.2 0.2 1 58

			//cull_hardware none

		    // Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture _Ashlar_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture _Ashlar_.jpg
            		tex_coord_set 1 
         	} 
		}

	}

	technique 
	{ 
		pass 
		{
			texture_unit 
			{ 
				texture _Ashlar_.jpg
			} 
		}
	}
}
//----------------------------------------------------------------------

// No bumpmapping version
material PondPoolA
{
	technique
	{
		pass
		{
			ambient 0.509804 0.509804 0.509804 1
			diffuse 0.509804 0.509804 0.509804 1
			specular 0.2 0.2 0.2 1 58

			//cull_hardware none

			texture_unit
			{
				texture BeachStones2.jpg
			}
		}

	}
}
//----------------------------------------------------------------------
// For pond pool
material PondPoolA_OffsetMapping : ICG/OffsetMapping/Specular
{
	technique ShaderModel4
	{
		pass
		{
			ambient 0.409804 0.409804 0.309804 1
			diffuse 0.409804 0.409804 0.309804 1
			specular 0.2 0.2 0.2 1 58
			//cull_hardware none
		}
		pass
		{
		    // Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture BeachStones2_NH.tga
            		tex_coord_set 0 
			scale 10.0 10.0
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture BeachStones2.jpg
            		tex_coord_set 1 
			scale 10.0 10.0
         	} 
		}
	}

	technique GLES
	{
		pass
		{
			ambient 0.409804 0.409804 0.309804 1
			diffuse 0.409804 0.409804 0.309804 1
			specular 0.2 0.2 0.2 1 58
			//cull_hardware none
		}
		pass
		{
		    // Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture BeachStones2_NH.tga
            		tex_coord_set 0 
			scale 100.0 100.0
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture BeachStones2.jpg
            		tex_coord_set 1 
			scale 0.1 0.1
         	}
		}
	}


	technique gl dx9
	{
		pass
		{
			ambient 0.309804 0.309804 0.309804 1
			diffuse 0.309804 0.309804 0.309804 1
			specular 0.2 0.2 0.2 1 58

			//cull_hardware none
		}
		pass
		{
		    // Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture BeachStones2_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture BeachStones2.jpg
            		tex_coord_set 1 
         	} 
		}

	}

	technique
	{
		pass
		{
			// Working?
			ambient 0.309804 0.309804 0.309804 1
			diffuse 0.309804 0.309804 0.309804 1
			specular 0.2 0.2 0.2 1 58

			//cull_hardware none

		    // Normal + height(alpha) map 
       	 	texture_unit 
        	{ 
            		texture BeachStones2_NH.tga
            		tex_coord_set 0 
         	} 

	  	    // Base diffuse texture map 
         	texture_unit 
         	{ 
            		texture BeachStones2.jpg
            		tex_coord_set 1 
         	} 
		}

	}

	technique 
	{ 
		pass 
		{
			texture_unit 
			{ 
				texture BeachStones2.jpg
			} 
		}
	}
}
//----------------------------------------------------------------------

// Originated from Examples/Water7 of Ogre's water sample
material ICG_PondWater
{
	technique
	{
		pass
		{
			cull_hardware none
			cull_software none

			texture_unit
			{
				texture BeachStones.jpg
				scale 0.25 0.25
			}

			texture_unit
			{
				// Not too bad with simple 2D texture
				texture P1020820_2.JPG
				tex_address_mode mirror

				scale 4.0 2.0
				
				// From Examples/CloudyNoonSkyBox
				//cubic_texture cloudy_noon.jpg combinedUVW 
				//tex_address_mode mirror

				//cubic_texture cubescene.jpg combinedUVW // Original one of Examples/Water7
				//cubic_texture CarCubeMap combinedUVW // Viewpoint is different, but we might use this..? kk 
				//tex_address_mode clamp
				
				env_map cubic_reflection
			}
		}
	}
}


//----------------------------
// Fresnel effect brough from Examples-Advanced.material
//----------------------------

vertex_program ICG/FresnelRefractReflectVPCg cg
{
	source Example_Fresnel.cg
	entry_point main_vp
	profiles vs_4_0 vs_1_1 arbvp1
}
vertex_program ICG/FresnelRefractReflectVPold cg
{
	source Example_Fresnel.cg
	entry_point main_vp_old
	profiles vs_1_1 arbvp1
}
vertex_program ICG/FresnelRefractReflectVPGLSLES glsles
{
	source Example_FresnelVp.glsles
	entry_point main
	profiles glsles
}

vertex_program ICG/FresnelRefractReflectVP unified
{
	delegate ICG/FresnelRefractReflectVPGLSLES
	delegate ICG/FresnelRefractReflectVPCg
}

fragment_program ICG/FresnelRefractReflectFPCg cg
{
	source Example_Fresnel.cg
	entry_point main_fp
	// sorry, ps_1_1 and fp20 can't do this
	profiles ps_4_0 ps_2_0 arbfp1
}

fragment_program ICG/FresnelRefractReflectPS asm
{
	source Example_FresnelPS.asm
	// sorry, only for ps_1_4 :)
	syntax ps_1_4
}

fragment_program ICG/FresnelRefractReflectFPGLSLES glsles
{
	source Example_FresnelFp.glsles
	entry_point main
	profiles glsles
	default_params
	{
		// assign samplers as required by GLSL
		param_named noiseMap int 0
		param_named reflectMap int 1
		param_named refractMap int 2
	}
}

fragment_program ICG/FresnelRefractReflectFP unified
{
	delegate ICG/FresnelRefractReflectFPGLSLES
	delegate ICG/FresnelRefractReflectFPCg
}

material ICG_FresnelReflectionRefraction
{
	// ps_2_0 / arbfp1
	technique
	{
		pass 
		{
			
			vertex_program_ref ICG/FresnelRefractReflectVP
			{
				param_named_auto worldViewProjMatrix worldviewproj_matrix
				param_named_auto eyePosition camera_position_object_space
				param_named_auto timeVal time 0.05
				param_named scroll float 1  
				param_named scale float 1 
				param_named noise float 1 
				// scroll and noisePos will need updating per frame
			}
			fragment_program_ref ICG/FresnelRefractReflectFP
			{
				param_named fresnelBias float 0.2 
				param_named fresnelScale float 2.0 
				param_named fresnelPower float 8  
				param_named tintColour float4 0 0.05 0.15 1
				param_named noiseScale float 0.02
			}
			// Noise
			texture_unit
			{
				// Perlin noise volume
				texture waves2.dds
				// min / mag filtering, no mip
				filtering linear linear none
			}
			// Reflection
			texture_unit
			{
				// Will be filled in at runtime
				texture ReflectionMap
				tex_address_mode clamp
			}
			// Refraction
			texture_unit
			{
				// Will be filled in at runtime
				texture RefractionMap
				tex_address_mode clamp
			}

		}
		
			
	}

	// ATI 8500 +
	technique
	{
		pass
		{
			vertex_program_ref ICG/FresnelRefractReflectVPold
			{
				param_named_auto worldViewProjMatrix worldviewproj_matrix
				param_named_auto eyePosition camera_position_object_space
				param_named fresnelBias float -0.3
				param_named fresnelScale float 1.4
				param_named fresnelPower float 8
				param_named_auto timeVal time_0_1 20
				param_named scroll float 1 
				param_named scale float 4 
				param_named noise float 1
				// scroll and noisePos will need updating per frame
			}

			// for ATI RADEON 8500 - 9200
			fragment_program_ref ICG/FresnelRefractReflectPS
			{
				// distortionRange
				param_indexed 0  float 0.025  
				// tintColour
				param_indexed 1  float4 0.05 0.12 0.15 1
			}

			// Noise
			texture_unit
			{
				// Perlin noise volume
				texture perlinvolume.dds 3d
				// min / mag filtering, no mip
				filtering linear linear none
			}
			// Reflection
			texture_unit
			{
				// Will be filled in at runtime
				texture ReflectionMap
				tex_address_mode clamp
			}
			// Refraction
			texture_unit
			{
				// Will be filled in at runtime
				texture RefractionMap
				tex_address_mode clamp
			}
		}
	}

}